[{"/Users/jani/Code/Web/dxpaint/src/index.tsx":"1","/Users/jani/Code/Web/dxpaint/src/components/App.tsx":"2","/Users/jani/Code/Web/dxpaint/src/components/canvas/ZoomCanvas.tsx":"3","/Users/jani/Code/Web/dxpaint/src/components/toolbox/BuiltInBrushes.tsx":"4","/Users/jani/Code/Web/dxpaint/src/components/palette/ColorIndicator.tsx":"5","/Users/jani/Code/Web/dxpaint/src/overmind/canvas/index.ts":"6","/Users/jani/Code/Web/dxpaint/src/overmind/app/index.ts":"7","/Users/jani/Code/Web/dxpaint/src/overmind/tool/index.ts":"8","/Users/jani/Code/Web/dxpaint/src/brush/BrushHistory.ts":"9","/Users/jani/Code/Web/dxpaint/src/components/canvas/Canvas.tsx":"10","/Users/jani/Code/Web/dxpaint/src/components/menubar/MenuItemOpen.tsx":"11","/Users/jani/Code/Web/dxpaint/src/brush/CustomBrush.tsx":"12","/Users/jani/Code/Web/dxpaint/src/overmind/dialog/state.ts":"13","/Users/jani/Code/Web/dxpaint/src/overmind/dialog/actions.ts":"14","/Users/jani/Code/Web/dxpaint/src/overmind/palette/actions.ts":"15","/Users/jani/Code/Web/dxpaint/src/overmind/toolbox/actions.ts":"16","/Users/jani/Code/Web/dxpaint/src/overmind/tool/state.ts":"17","/Users/jani/Code/Web/dxpaint/src/overmind/brush/state.ts":"18","/Users/jani/Code/Web/dxpaint/src/algorithm/shape.ts":"19","/Users/jani/Code/Web/dxpaint/src/tools/FreehandTool.tsx":"20","/Users/jani/Code/Web/dxpaint/src/components/palette/util.tsx":"21","/Users/jani/Code/Web/dxpaint/src/tools/EllipseTool.tsx":"22","/Users/jani/Code/Web/dxpaint/src/tools/AirbrushTool.tsx":"23","/Users/jani/Code/Web/dxpaint/src/brush/BuiltInBrushFactory.tsx":"24","/Users/jani/Code/Web/dxpaint/src/tools/util/Throttle.tsx":"25","/Users/jani/Code/Web/dxpaint/src/overmind/index.ts":"26","/Users/jani/Code/Web/dxpaint/src/components/menubar/MenuItemSave.tsx":"27","/Users/jani/Code/Web/dxpaint/src/components/toolbox/buttons/ToolboxDualToggleButton.tsx":"28","/Users/jani/Code/Web/dxpaint/src/tools/util/Debounce.tsx":"29","/Users/jani/Code/Web/dxpaint/src/overmind/canvas/state.ts":"30","/Users/jani/Code/Web/dxpaint/src/overmind/undo/state.ts":"31","/Users/jani/Code/Web/dxpaint/src/overmind/palette/state.ts":"32","/Users/jani/Code/Web/dxpaint/src/overmind/tool/actions.ts":"33","/Users/jani/Code/Web/dxpaint/src/brush/PixelBrush.tsx":"34","/Users/jani/Code/Web/dxpaint/src/tools/LineTool.tsx":"35","/Users/jani/Code/Web/dxpaint/src/tools/ZoomInitialPointSelectorTool.tsx":"36","/Users/jani/Code/Web/dxpaint/src/tools/CurveTool.tsx":"37","/Users/jani/Code/Web/dxpaint/src/tools/PolygonTool.tsx":"38","/Users/jani/Code/Web/dxpaint/src/components/dialog/Dialog.tsx":"39","/Users/jani/Code/Web/dxpaint/src/components/canvas/MainCanvas.tsx":"40","/Users/jani/Code/Web/dxpaint/src/components/canvas/hooks.tsx":"41","/Users/jani/Code/Web/dxpaint/src/components/toolbox/buttons/ToolboxToggleButton.tsx":"42","/Users/jani/Code/Web/dxpaint/src/components/paletteEditor/PaletteEditor.tsx":"43","/Users/jani/Code/Web/dxpaint/src/components/GlobalHotkeyManager.tsx":"44","/Users/jani/Code/Web/dxpaint/src/components/toolbox/Toolbox.tsx":"45","/Users/jani/Code/Web/dxpaint/src/components/dialog/DialogManager.tsx":"46","/Users/jani/Code/Web/dxpaint/src/overmind/palette/index.ts":"47","/Users/jani/Code/Web/dxpaint/src/overmind/brush/index.ts":"48","/Users/jani/Code/Web/dxpaint/src/overmind/toolbox/index.ts":"49","/Users/jani/Code/Web/dxpaint/src/components/menubar/MenuItem.tsx":"50","/Users/jani/Code/Web/dxpaint/src/components/toolbox/buttons/ToolboxActionButton.tsx":"51","/Users/jani/Code/Web/dxpaint/src/overmind/app/actions.ts":"52","/Users/jani/Code/Web/dxpaint/src/overmind/brush/actions.ts":"53","/Users/jani/Code/Web/dxpaint/src/tools/BrushSelector.tsx":"54","/Users/jani/Code/Web/dxpaint/src/tools/CircleTool.tsx":"55","/Users/jani/Code/Web/dxpaint/src/tools/ColorSelectorTool.tsx":"56","/Users/jani/Code/Web/dxpaint/src/overmind/dialog/index.ts":"57","/Users/jani/Code/Web/dxpaint/src/overmind/canvas/actions.ts":"58","/Users/jani/Code/Web/dxpaint/src/tools/RectangleTool.tsx":"59","/Users/jani/Code/Web/dxpaint/src/tools/TextTool.tsx":"60","/Users/jani/Code/Web/dxpaint/src/overmind/undo/index.ts":"61","/Users/jani/Code/Web/dxpaint/src/overmind/toolbox/state.ts":"62","/Users/jani/Code/Web/dxpaint/src/tools/DottedFreehandTool.tsx":"63","/Users/jani/Code/Web/dxpaint/src/overmind/paletteEditor/actions.ts":"64","/Users/jani/Code/Web/dxpaint/src/overmind/paletteEditor/state.ts":"65","/Users/jani/Code/Web/dxpaint/src/components/palette/ColorButton.tsx":"66","/Users/jani/Code/Web/dxpaint/src/components/palette/Palette.tsx":"67","/Users/jani/Code/Web/dxpaint/src/overmind/undo/actions.ts":"68","/Users/jani/Code/Web/dxpaint/src/components/menubar/Menubar.tsx":"69","/Users/jani/Code/Web/dxpaint/src/tools/util/util.tsx":"70","/Users/jani/Code/Web/dxpaint/src/overmind/paletteEditor/index.ts":"71","/Users/jani/Code/Web/dxpaint/src/overmind/app/state.ts":"72","/Users/jani/Code/Web/dxpaint/src/overmind/undo/UndoBuffer.ts":"73","/Users/jani/Code/Web/dxpaint/src/components/canvas/util.tsx":"74","/Users/jani/Code/Web/dxpaint/src/serviceWorker.ts":"75","/Users/jani/Code/Web/dxpaint/src/tools/FloodFillTool.tsx":"76","/Users/jani/Code/Web/dxpaint/src/canvas/paintingCanvas/program/GeometricIndexer.ts":"77","/Users/jani/Code/Web/dxpaint/src/canvas/paintingCanvas/program/DrawImageRenderer.ts":"78","/Users/jani/Code/Web/dxpaint/src/canvas/paintingCanvas/program/GeometricRenderer.ts":"79","/Users/jani/Code/Web/dxpaint/src/canvas/paintingCanvas/PaintingCanvasController.ts":"80","/Users/jani/Code/Web/dxpaint/src/canvas/paintingCanvas/program/DrawImageIndexer.ts":"81","/Users/jani/Code/Web/dxpaint/src/canvas/overlayCanvas/OverlayCanvasController.ts":"82","/Users/jani/Code/Web/dxpaint/src/canvas/overlayCanvas/program/OverlayGeometricRenderer.ts":"83","/Users/jani/Code/Web/dxpaint/src/canvas/overlayCanvas/OverlayMainCanvasRenderer.ts":"84","/Users/jani/Code/Web/dxpaint/src/canvas/util/util.ts":"85","/Users/jani/Code/Web/dxpaint/src/canvas/ZoomCanvasRenderer.ts":"86","/Users/jani/Code/Web/dxpaint/src/canvas/paintingCanvas/ColorIndexer.ts":"87","/Users/jani/Code/Web/dxpaint/src/canvas/paintingCanvas/MainCanvasRenderer.ts":"88","/Users/jani/Code/Web/dxpaint/src/canvas/overlayCanvas/program/OverlayDrawImageRenderer.ts":"89","/Users/jani/Code/Web/dxpaint/src/domain/LineV.ts":"90","/Users/jani/Code/Web/dxpaint/src/domain/LineH.ts":"91","/Users/jani/Code/Web/dxpaint/src/domain/Line.ts":"92","/Users/jani/Code/Web/dxpaint/src/canvas/util/webglUtil.ts":"93","/Users/jani/Code/Web/dxpaint/src/components/toolbox/buttons/ToolboxButtonHoverManager.tsx":"94","/Users/jani/Code/Web/dxpaint/src/components/modal/Modal.tsx":"95","/Users/jani/Code/Web/dxpaint/src/algorithm/floodfill.ts":"96","/Users/jani/Code/Web/dxpaint/src/canvas/overlayCanvas/program/OverlaySelectionIndicatorRenderer.ts":"97"},{"size":758,"mtime":1581006660054,"results":"98","hashOfConfig":"99"},{"size":1156,"mtime":1619955682098,"results":"100","hashOfConfig":"99"},{"size":2193,"mtime":1628002646883,"results":"101","hashOfConfig":"99"},{"size":4162,"mtime":1620469470404,"results":"102","hashOfConfig":"99"},{"size":1341,"mtime":1609964713351,"results":"103","hashOfConfig":"99"},{"size":99,"mtime":1570358386366,"results":"104","hashOfConfig":"105"},{"size":99,"mtime":1589653071467,"results":"106","hashOfConfig":"99"},{"size":99,"mtime":1581162181250,"results":"107","hashOfConfig":"99"},{"size":407,"mtime":1628002016546,"results":"108","hashOfConfig":"99"},{"size":2967,"mtime":1619968579580,"results":"109","hashOfConfig":"99"},{"size":712,"mtime":1586637521430,"results":"110","hashOfConfig":"99"},{"size":5845,"mtime":1627936048534,"results":"111","hashOfConfig":"99"},{"size":103,"mtime":1589645340777,"results":"112","hashOfConfig":"99"},{"size":238,"mtime":1589698799652,"results":"113","hashOfConfig":"99"},{"size":936,"mtime":1619869526700,"results":"114","hashOfConfig":"99"},{"size":2307,"mtime":1587665133808,"results":"115","hashOfConfig":"99"},{"size":1144,"mtime":1619984736668,"results":"116","hashOfConfig":"99"},{"size":775,"mtime":1598628605933,"results":"117","hashOfConfig":"99"},{"size":11789,"mtime":1620591671153,"results":"118","hashOfConfig":"99"},{"size":3050,"mtime":1619982599429,"results":"119","hashOfConfig":"99"},{"size":2427,"mtime":1598195635333,"results":"120","hashOfConfig":"99"},{"size":4942,"mtime":1627975110147,"results":"121","hashOfConfig":"99"},{"size":3169,"mtime":1619982576072,"results":"122","hashOfConfig":"99"},{"size":2297,"mtime":1619870066504,"results":"123","hashOfConfig":"99"},{"size":749,"mtime":1606592951751,"results":"124","hashOfConfig":"99"},{"size":1069,"mtime":1609948473281,"results":"125","hashOfConfig":"99"},{"size":419,"mtime":1586636737515,"results":"126","hashOfConfig":"99"},{"size":1590,"mtime":1620922525269,"results":"127","hashOfConfig":"99"},{"size":448,"mtime":1606592971846,"results":"128","hashOfConfig":"99"},{"size":349,"mtime":1619984410728,"results":"129","hashOfConfig":"99"},{"size":216,"mtime":1627935259609,"results":"130","hashOfConfig":"99"},{"size":787,"mtime":1610395467992,"results":"131","hashOfConfig":"99"},{"size":3112,"mtime":1619984147301,"results":"132","hashOfConfig":"99"},{"size":2981,"mtime":1619940932376,"results":"133","hashOfConfig":"99"},{"size":2244,"mtime":1619982601701,"results":"134","hashOfConfig":"99"},{"size":1225,"mtime":1627930523681,"results":"135","hashOfConfig":"99"},{"size":2524,"mtime":1619982588090,"results":"136","hashOfConfig":"99"},{"size":4078,"mtime":1619982604334,"results":"137","hashOfConfig":"99"},{"size":434,"mtime":1621794076754,"results":"138","hashOfConfig":"99"},{"size":841,"mtime":1619955333629,"results":"139","hashOfConfig":"99"},{"size":2662,"mtime":1628002617328,"results":"140","hashOfConfig":"99"},{"size":1082,"mtime":1620849760423,"results":"141","hashOfConfig":"99"},{"size":3131,"mtime":1621796895129,"results":"142","hashOfConfig":"99"},{"size":794,"mtime":1589698776952,"results":"143","hashOfConfig":"99"},{"size":5459,"mtime":1620483772984,"results":"144","hashOfConfig":"99"},{"size":1454,"mtime":1621793852901,"results":"145","hashOfConfig":"99"},{"size":99,"mtime":1570358390587,"results":"146","hashOfConfig":"99"},{"size":99,"mtime":1570358382606,"results":"147","hashOfConfig":"99"},{"size":99,"mtime":1570358454848,"results":"148","hashOfConfig":"105"},{"size":479,"mtime":1586285629987,"results":"149","hashOfConfig":"99"},{"size":866,"mtime":1620849748627,"results":"150","hashOfConfig":"99"},{"size":197,"mtime":1589653419630,"results":"151","hashOfConfig":"99"},{"size":1284,"mtime":1627972835051,"results":"152","hashOfConfig":"99"},{"size":2171,"mtime":1627974984923,"results":"153","hashOfConfig":"99"},{"size":3309,"mtime":1627975138584,"results":"154","hashOfConfig":"99"},{"size":1110,"mtime":1627542172658,"results":"155","hashOfConfig":"99"},{"size":99,"mtime":1589645298846,"results":"156","hashOfConfig":"99"},{"size":889,"mtime":1619984421252,"results":"157","hashOfConfig":"99"},{"size":2927,"mtime":1628001609319,"results":"158","hashOfConfig":"99"},{"size":2797,"mtime":1628002353608,"results":"159","hashOfConfig":"99"},{"size":99,"mtime":1570358463891,"results":"160","hashOfConfig":"99"},{"size":3476,"mtime":1606591793814,"results":"161","hashOfConfig":"99"},{"size":2470,"mtime":1619982592203,"results":"162","hashOfConfig":"99"},{"size":221,"mtime":1609964687396,"results":"163","hashOfConfig":"99"},{"size":94,"mtime":1609948309696,"results":"164","hashOfConfig":"99"},{"size":1140,"mtime":1610122119190,"results":"165","hashOfConfig":"99"},{"size":2782,"mtime":1620107155392,"results":"166","hashOfConfig":"99"},{"size":1294,"mtime":1627935305733,"results":"167","hashOfConfig":"99"},{"size":3363,"mtime":1619868670057,"results":"168","hashOfConfig":"99"},{"size":4545,"mtime":1627936789639,"results":"169","hashOfConfig":"99"},{"size":99,"mtime":1609948228471,"results":"170","hashOfConfig":"99"},{"size":129,"mtime":1589653235884,"results":"171","hashOfConfig":"99"},{"size":424,"mtime":1611407191206,"results":"172","hashOfConfig":"99"},{"size":758,"mtime":1616082227415,"results":"173","hashOfConfig":"105"},{"size":5183,"mtime":1615012131754,"results":"174","hashOfConfig":"99"},{"size":1357,"mtime":1627636468751,"results":"175","hashOfConfig":"99"},{"size":5275,"mtime":1619191509501,"results":"176","hashOfConfig":"99"},{"size":2086,"mtime":1619184850511,"results":"177","hashOfConfig":"99"},{"size":4218,"mtime":1619191725461,"results":"178","hashOfConfig":"99"},{"size":9403,"mtime":1627712827259,"results":"179","hashOfConfig":"99"},{"size":5828,"mtime":1619191551996,"results":"180","hashOfConfig":"99"},{"size":5634,"mtime":1627974909415,"results":"181","hashOfConfig":"99"},{"size":4787,"mtime":1619245365397,"results":"182","hashOfConfig":"99"},{"size":2137,"mtime":1627974809023,"results":"183","hashOfConfig":"99"},{"size":1638,"mtime":1619191683528,"results":"184","hashOfConfig":"99"},{"size":1401,"mtime":1620025015387,"results":"185","hashOfConfig":"99"},{"size":4960,"mtime":1627538814135,"results":"186","hashOfConfig":"99"},{"size":1177,"mtime":1619940781531,"results":"187","hashOfConfig":"99"},{"size":5640,"mtime":1627915771992,"results":"188","hashOfConfig":"99"},{"size":565,"mtime":1618726558340,"results":"189","hashOfConfig":"99"},{"size":567,"mtime":1619191463704,"results":"190","hashOfConfig":"99"},{"size":180,"mtime":1618674251371,"results":"191","hashOfConfig":"99"},{"size":1587,"mtime":1617636966253,"results":"192","hashOfConfig":"99"},{"size":1496,"mtime":1620922482659,"results":"193","hashOfConfig":"99"},{"size":554,"mtime":1621753692831,"results":"194","hashOfConfig":"99"},{"size":3048,"mtime":1627636846781,"results":"195","hashOfConfig":"99"},{"size":5599,"mtime":1628002337435,"results":"196","hashOfConfig":"99"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},"1e7kwag",{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},"1plr3f1",{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"242"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"206"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"199"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"199"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"242"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"242"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"206"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"316","messages":"317","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"318","messages":"319","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"328","messages":"329","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"242"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"206"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"388","messages":"389","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"206"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"393"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jani/Code/Web/dxpaint/src/index.tsx",[],[],"/Users/jani/Code/Web/dxpaint/src/components/App.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/canvas/ZoomCanvas.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/toolbox/BuiltInBrushes.tsx",[],[],"/Users/jani/Code/Web/dxpaint/src/components/palette/ColorIndicator.tsx",[],"/Users/jani/Code/Web/dxpaint/src/overmind/canvas/index.ts",[],[],"/Users/jani/Code/Web/dxpaint/src/overmind/app/index.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/tool/index.ts",[],"/Users/jani/Code/Web/dxpaint/src/brush/BrushHistory.ts",[],"/Users/jani/Code/Web/dxpaint/src/components/canvas/Canvas.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/menubar/MenuItemOpen.tsx",[],"/Users/jani/Code/Web/dxpaint/src/brush/CustomBrush.tsx",[],"/Users/jani/Code/Web/dxpaint/src/overmind/dialog/state.ts",[],[],"/Users/jani/Code/Web/dxpaint/src/overmind/dialog/actions.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/palette/actions.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/toolbox/actions.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/tool/state.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/brush/state.ts",[],"/Users/jani/Code/Web/dxpaint/src/algorithm/shape.ts",[],"/Users/jani/Code/Web/dxpaint/src/tools/FreehandTool.tsx",["410","411","412","413"],"import { Tool } from './Tool';\nimport {\n  getMousePos,\n  isRightMouseButton,\n  isLeftOrRightMouseButton,\n  pointEquals,\n  points8Connected,\n} from './util/util';\nimport { overmind } from '../index';\nimport { brushHistory } from '../brush/BrushHistory';\nimport { paintingCanvasController } from '../canvas/paintingCanvas/PaintingCanvasController';\nimport { overlayCanvasController } from '../canvas/overlayCanvas/OverlayCanvasController';\n\nexport class FreehandTool implements Tool {\n  private prepareToPaint(withBGColor: boolean): void {\n    if (withBGColor) {\n      overmind.actions.tool.activeToolToBGFillStyle();\n      overmind.actions.brush.toBGBrush();\n    }\n  }\n\n  public onInit(): void {\n    overmind.actions.tool.freeHandToolPrevious(null);\n    overmind.actions.tool.activeToolToFGFillStyle();\n    overmind.actions.brush.toFGBrush();\n  }\n\n  public onContextMenu(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void {\n    event.preventDefault();\n  }\n\n  public onMouseMove(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void {\n    if (event.buttons && overmind.state.tool.freehandTool.previous) {\n      const mousePos = getMousePos(event);\n      const start = overmind.state.tool.freehandTool.previous;\n      const end = mousePos;\n      if (pointEquals(start, end)) {\n        return; // this point has already been drawn to canvas\n      }\n      if (points8Connected(start, end)) {\n        brushHistory.current.drawPoint(end, paintingCanvasController);\n      } else {\n        brushHistory.current.drawLine(start, end, paintingCanvasController);\n      }\n      overmind.actions.tool.freeHandToolPrevious(end);\n    }\n  }\n\n  public onMouseDown(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void {\n    const mousePos = getMousePos(event);\n    this.prepareToPaint(isRightMouseButton(event));\n    brushHistory.current.drawPoint(mousePos, paintingCanvasController);\n    overmind.actions.tool.freeHandToolPrevious(mousePos);\n  }\n\n  public onMouseUp(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void {\n    this.onInit();\n    overmind.actions.undo.setUndoPoint();\n  }\n\n  public onMouseLeave(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void {\n    this.onInit();\n  }\n\n  public onMouseEnter(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void {\n    if (isLeftOrRightMouseButton(event)) {\n      this.prepareToPaint(isRightMouseButton(event));\n      const mousePos = getMousePos(event);\n      overmind.actions.tool.freeHandToolPrevious(mousePos);\n    }\n  }\n\n  // Overlay\n\n  public onMouseMoveOverlay(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void {\n    if (event.buttons) {\n      return;\n    }\n    const mousePos = getMousePos(event);\n    brushHistory.current.drawPoint(mousePos, overlayCanvasController);\n  }\n\n  public onMouseDownOverlay(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void {\n    overlayCanvasController.clear();\n  }\n\n  public onMouseLeaveOverlay(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void {\n    overlayCanvasController.clear();\n  }\n}\n",[],"/Users/jani/Code/Web/dxpaint/src/components/palette/util.tsx",[],"/Users/jani/Code/Web/dxpaint/src/tools/EllipseTool.tsx",["414"],"/Users/jani/Code/Web/dxpaint/src/tools/AirbrushTool.tsx",["415","416","417"],"import { Tool } from './Tool';\nimport { getMousePos, isRightMouseButton, isLeftOrRightMouseButton } from './util/util';\nimport { overmind } from '../index';\nimport { brushHistory } from '../brush/BrushHistory';\nimport { paintingCanvasController } from '../canvas/paintingCanvas/PaintingCanvasController';\nimport { overlayCanvasController } from '../canvas/overlayCanvas/OverlayCanvasController';\n\nexport class AirbrushTool implements Tool {\n  // TODO fix\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private timeout: any = 0;\n\n  private prepareToPaint(withBGColor: boolean): void {\n    if (withBGColor) {\n      overmind.actions.tool.activeToolToBGFillStyle();\n      overmind.actions.brush.toBGBrush();\n    }\n  }\n\n  public onInit(): void {\n    overmind.actions.tool.activeToolToFGFillStyle();\n    overmind.actions.brush.toFGBrush();\n  }\n\n  public onContextMenu(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void {\n    event.preventDefault();\n  }\n\n  public onMouseMove(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void {\n    const mousePos = getMousePos(event);\n    overmind.actions.tool.airbrushToolPosition(mousePos);\n  }\n\n  public onMouseDown(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void {\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    const draw = (): void => {\n      //TODO: draw in bigger batches, maybe drawDot should accept an array? Or new method\n      // drawDots\n      for (let i = 50; i--; ) {\n        const angle = getRandomFloat(0, Math.PI * 2);\n        const radius = getRandomFloat(0, 20);\n        if (overmind.state.tool.airbrushTool.position) {\n          brushHistory.current.drawPoint(\n            {\n              x: overmind.state.tool.airbrushTool.position.x + radius * Math.cos(angle),\n              y: overmind.state.tool.airbrushTool.position.y + radius * Math.sin(angle),\n            },\n            paintingCanvasController\n          );\n        }\n      }\n      this.timeout = setTimeout(draw, 20);\n    };\n\n    this.prepareToPaint(isRightMouseButton(event));\n    this.timeout = setTimeout(draw, 20);\n  }\n\n  public onMouseUp(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void {\n    clearTimeout(this.timeout);\n    this.onInit();\n    overmind.actions.undo.setUndoPoint();\n  }\n\n  public onMouseLeave(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void {\n    clearTimeout(this.timeout);\n    this.onInit();\n    if (isLeftOrRightMouseButton(event)) {\n      overmind.actions.undo.setUndoPoint();\n    }\n  }\n\n  // Overlay\n\n  public onMouseMoveOverlay(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void {\n    if (event.buttons) {\n      return;\n    }\n    const mousePos = getMousePos(event);\n    brushHistory.current.drawPoint(mousePos, overlayCanvasController);\n  }\n\n  public onMouseDownOverlay(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void {\n    overlayCanvasController.clear();\n  }\n\n  public onMouseLeaveOverlay(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void {\n    overlayCanvasController.clear();\n  }\n}\n\nfunction getRandomFloat(min: number, max: number): number {\n  return Math.random() * (max - min) + min;\n}\n","/Users/jani/Code/Web/dxpaint/src/brush/BuiltInBrushFactory.tsx",[],"/Users/jani/Code/Web/dxpaint/src/tools/util/Throttle.tsx",["418"],"export class Throttle {\n  private milliSecs: number;\n  private lastFunc: NodeJS.Timeout | null;\n  private lastRan: number | null;\n\n  public constructor(milliSecs: number) {\n    this.milliSecs = milliSecs;\n    this.lastFunc = null;\n    this.lastRan = null;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  public call(func: Function): void {\n    if (!this.lastRan) {\n      func();\n      this.lastRan = Date.now();\n    } else {\n      if (this.lastFunc) {\n        clearTimeout(this.lastFunc);\n      }\n      this.lastFunc = setTimeout(() => {\n        if (Date.now() - this.lastRan! >= this.milliSecs) {\n          func();\n          this.lastRan = Date.now();\n        }\n      }, this.milliSecs - (Date.now() - this.lastRan));\n    }\n  }\n}\n","/Users/jani/Code/Web/dxpaint/src/overmind/index.ts",[],"/Users/jani/Code/Web/dxpaint/src/components/menubar/MenuItemSave.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/toolbox/buttons/ToolboxDualToggleButton.tsx",[],"/Users/jani/Code/Web/dxpaint/src/tools/util/Debounce.tsx",[],"/Users/jani/Code/Web/dxpaint/src/overmind/canvas/state.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/undo/state.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/palette/state.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/tool/actions.ts",[],"/Users/jani/Code/Web/dxpaint/src/brush/PixelBrush.tsx",[],"/Users/jani/Code/Web/dxpaint/src/tools/LineTool.tsx",["419"],"/* eslint-disable no-undef */\nimport { Tool } from './Tool';\nimport { getMousePos, isRightMouseButton, isLeftMouseButton } from './util/util';\nimport { overmind } from '../index';\nimport { brushHistory } from '../brush/BrushHistory';\nimport { paintingCanvasController } from '../canvas/paintingCanvas/PaintingCanvasController';\nimport { overlayCanvasController } from '../canvas/overlayCanvas/OverlayCanvasController';\n\nexport class LineTool implements Tool {\n  private prepareToPaint(withBGColor: boolean): void {\n    if (withBGColor) {\n      overmind.actions.tool.activeToolToBGFillStyle();\n      overmind.actions.brush.toBGBrush();\n    }\n  }\n\n  public onInit(): void {\n    overmind.actions.tool.lineToolStart(null);\n    overmind.actions.tool.activeToolToFGFillStyle();\n    overmind.actions.brush.toFGBrush();\n  }\n\n  public onContextMenu(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void {\n    event.preventDefault();\n  }\n\n  public onMouseUp(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void {\n    if (!overmind.state.tool.lineTool.start) {\n      return;\n    }\n\n    const mousePos = getMousePos(event);\n    const start = overmind.state.tool.lineTool.start;\n    const end = mousePos;\n    brushHistory.current.drawLine(start, end, paintingCanvasController);\n    overmind.actions.undo.setUndoPoint();\n    this.onInit();\n  }\n\n  public onMouseDown(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void {\n    this.prepareToPaint(isRightMouseButton(event));\n    const mousePos = getMousePos(event);\n    overmind.actions.tool.lineToolStart(mousePos);\n  }\n\n  // Overlay\n\n  public onMouseMoveOverlay(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void {\n    const mousePos = getMousePos(event);\n\n    if (\n      overmind.state.tool.lineTool.start &&\n      (isLeftMouseButton(event) || isRightMouseButton(event))\n    ) {\n      const start = overmind.state.tool.lineTool.start;\n      const end = mousePos;\n      brushHistory.current.drawLine(start, end, overlayCanvasController);\n    } else {\n      brushHistory.current.drawPoint(mousePos, overlayCanvasController);\n    }\n  }\n\n  public onMouseLeaveOverlay(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void {\n    overlayCanvasController.clear();\n  }\n}\n","/Users/jani/Code/Web/dxpaint/src/tools/ZoomInitialPointSelectorTool.tsx",["420","421"],"/Users/jani/Code/Web/dxpaint/src/tools/CurveTool.tsx",["422"],"import { Tool } from './Tool';\nimport { getMousePos, isRightMouseButton, isLeftOrRightMouseButton } from './util/util';\nimport { overmind } from '../index';\nimport { brushHistory } from '../brush/BrushHistory';\nimport { paintingCanvasController } from '../canvas/paintingCanvas/PaintingCanvasController';\nimport { overlayCanvasController } from '../canvas/overlayCanvas/OverlayCanvasController';\n\nexport class CurveTool implements Tool {\n  private prepareToPaint(withBGColor: boolean): void {\n    if (withBGColor) {\n      overmind.actions.tool.activeToolToBGFillStyle();\n      overmind.actions.brush.toBGBrush();\n    }\n  }\n\n  public onInit(): void {\n    overmind.actions.tool.curveToolReset();\n    overmind.actions.tool.activeToolToFGFillStyle();\n    overmind.actions.brush.toFGBrush();\n  }\n\n  public onContextMenu(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void {\n    event.preventDefault();\n  }\n\n  public onMouseUp(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void {\n    const startPoint = overmind.state.tool.curveTool.start;\n    if (!startPoint) {\n      return;\n    }\n\n    const mousePos = getMousePos(event);\n    const endPoint = overmind.state.tool.curveTool.end;\n\n    if (endPoint) {\n      brushHistory.current.drawCurve(startPoint, endPoint, mousePos, paintingCanvasController);\n      overmind.actions.undo.setUndoPoint();\n      this.onInit();\n    } else {\n      overmind.actions.tool.curveToolEnd(mousePos);\n    }\n  }\n\n  public onMouseDown(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void {\n    if (!overmind.state.tool.curveTool.end) {\n      this.prepareToPaint(isRightMouseButton(event));\n      const mousePos = getMousePos(event);\n      overmind.actions.tool.curveToolStart(mousePos);\n    }\n  }\n\n  // Overlay\n\n  public onMouseMoveOverlay(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void {\n    const mousePos = getMousePos(event);\n\n    const startPoint = overmind.state.tool.curveTool.start;\n    if (!startPoint) {\n      brushHistory.current.drawPoint(mousePos, overlayCanvasController);\n      return;\n    }\n\n    const endPoint = overmind.state.tool.curveTool.end;\n    if (endPoint) {\n      brushHistory.current.drawCurve(startPoint, endPoint, mousePos, overlayCanvasController);\n    } else if (isLeftOrRightMouseButton(event)) {\n      brushHistory.current.drawLine(startPoint, mousePos, overlayCanvasController);\n    }\n  }\n\n  public onMouseLeaveOverlay(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void {\n    overlayCanvasController.clear();\n  }\n}\n","/Users/jani/Code/Web/dxpaint/src/tools/PolygonTool.tsx",["423","424"],"/Users/jani/Code/Web/dxpaint/src/components/dialog/Dialog.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/canvas/MainCanvas.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/canvas/hooks.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/toolbox/buttons/ToolboxToggleButton.tsx",["425"],"import React, { useState } from 'react';\nimport { ToolboxButtonHoverManager } from './ToolboxButtonHoverManager';\n\ninterface Props {\n  buttonClass: string;\n  isSelected: boolean;\n  onClick: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onRightClick?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n}\n\nexport function ToolboxToggleButton({\n  buttonClass,\n  isSelected,\n  onClick,\n  onRightClick,\n}: Props): JSX.Element {\n  const handleRightClick = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    if (onRightClick) {\n      onRightClick(event);\n    }\n    event.preventDefault();\n  };\n\n  return (\n    <ToolboxButtonHoverManager isDualToggleButton={false}>\n      <button\n        className={\n          'toolbox__button ' +\n          (isSelected\n            ? 'toolbox__button--' + buttonClass + '-selected' + ' toolbox_button_color_active'\n            : 'toolbox__button--' + buttonClass)\n        }\n        onClick={onClick}\n        onContextMenu={handleRightClick}\n      ></button>\n    </ToolboxButtonHoverManager>\n  );\n}\n","/Users/jani/Code/Web/dxpaint/src/components/paletteEditor/PaletteEditor.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/GlobalHotkeyManager.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/toolbox/Toolbox.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/dialog/DialogManager.tsx",["426"],"import React from 'react';\nimport { useOvermind } from '../../overmind';\nimport { Dialog } from './Dialog';\nimport { CustomBrush } from '../../brush/CustomBrush';\nimport './Dialog.css';\nimport { Button } from '@material-ui/core';\n\nexport function DialogManager(): JSX.Element | null {\n  const { state, actions } = useOvermind();\n\n  switch (state.dialog.activeDialog) {\n    case 'PASTE_SELECT':\n      // TODO: create components i.e. PasteDialog\n      return (\n        <Dialog header=\"Image from clipboard\" prompt=\"Select how to use this image.\">\n          <button\n            onClick={(): void => {\n              //actions.brush.setBrush(new CustomBrush(state.app.pasteBufferImageObjectURL));\n              actions.brush.setMode('Matte');\n              actions.dialog.close();\n            }}\n          >\n            Paste as brush\n          </button>\n          <button\n            onClick={(): void => {\n              actions.canvas.setLoadedImage(state.app.pasteBufferImageObjectURL);\n              actions.dialog.close();\n            }}\n          >\n            Paste as new image\n          </button>\n        </Dialog>\n      );\n\n    case 'PASTE_ERROR':\n      return (\n        <Dialog header=\"Image from clipboard\" prompt=\"Clipboard item not recognized as an image.\">\n          <Button variant=\"contained\" color=\"primary\" onClick={actions.dialog.close}>\n            OK\n          </Button>\n        </Dialog>\n      );\n\n    default:\n      return null;\n  }\n}\n","/Users/jani/Code/Web/dxpaint/src/overmind/palette/index.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/brush/index.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/toolbox/index.ts",[],[],"/Users/jani/Code/Web/dxpaint/src/components/menubar/MenuItem.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/toolbox/buttons/ToolboxActionButton.tsx",[],"/Users/jani/Code/Web/dxpaint/src/overmind/app/actions.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/brush/actions.ts",["427"],"/Users/jani/Code/Web/dxpaint/src/tools/BrushSelector.tsx",["428","429","430"],"/Users/jani/Code/Web/dxpaint/src/tools/CircleTool.tsx",["431","432","433"],"/Users/jani/Code/Web/dxpaint/src/tools/ColorSelectorTool.tsx",[],"/Users/jani/Code/Web/dxpaint/src/overmind/dialog/index.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/canvas/actions.ts",[],"/Users/jani/Code/Web/dxpaint/src/tools/RectangleTool.tsx",["434","435"],"/Users/jani/Code/Web/dxpaint/src/tools/TextTool.tsx",["436","437","438","439"],"/Users/jani/Code/Web/dxpaint/src/overmind/undo/index.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/toolbox/state.ts",[],"/Users/jani/Code/Web/dxpaint/src/tools/DottedFreehandTool.tsx",["440","441","442","443","444"],"import { Tool } from './Tool';\nimport { getMousePos, isRightMouseButton, omit, isLeftOrRightMouseButton } from './util/util';\nimport { overmind } from '../index';\nimport { brushHistory } from '../brush/BrushHistory';\nimport { paintingCanvasController } from '../canvas/paintingCanvas/PaintingCanvasController';\nimport { overlayCanvasController } from '../canvas/overlayCanvas/OverlayCanvasController';\n\nexport class DottedFreehandTool implements Tool {\n  private prepareToPaint(withBGColor: boolean): void {\n    if (withBGColor) {\n      overmind.actions.tool.activeToolToBGFillStyle();\n      overmind.actions.brush.toBGBrush();\n    }\n  }\n\n  public onInit(): void {\n    overmind.actions.tool.activeToolToFGFillStyle();\n    overmind.actions.brush.toFGBrush();\n  }\n\n  public onContextMenu(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void {\n    event.preventDefault();\n  }\n\n  public onMouseMove(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void {\n    if (event.buttons) {\n      const mousePos = getMousePos(event);\n      brushHistory.current.drawPoint(mousePos, paintingCanvasController);\n    }\n  }\n\n  public onMouseDown(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void {\n    const mousePos = getMousePos(event);\n    this.prepareToPaint(isRightMouseButton(event));\n    brushHistory.current.drawPoint(mousePos, paintingCanvasController);\n  }\n\n  public onMouseUp(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void {\n    this.onInit();\n    overmind.actions.undo.setUndoPoint();\n  }\n\n  public onMouseLeave(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void {\n    this.onInit();\n  }\n\n  public onMouseEnter(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void {\n    if (isLeftOrRightMouseButton(event)) {\n      this.prepareToPaint(isRightMouseButton(event));\n      const mousePos = getMousePos(event);\n      overmind.actions.tool.freeHandToolPrevious(mousePos);\n    }\n  }\n\n  // Overlay\n\n  public onMouseMoveOverlay(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void {\n    if (event.buttons) {\n      return;\n    }\n    const mousePos = getMousePos(event);\n    brushHistory.current.drawPoint(mousePos, overlayCanvasController);\n  }\n\n  public onMouseDownOverlay(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void {\n    overlayCanvasController.clear();\n  }\n\n  public onMouseLeaveOverlay(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void {\n    overlayCanvasController.clear();\n  }\n}\n","/Users/jani/Code/Web/dxpaint/src/overmind/paletteEditor/actions.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/paletteEditor/state.ts",[],"/Users/jani/Code/Web/dxpaint/src/components/palette/ColorButton.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/palette/Palette.tsx",[],"/Users/jani/Code/Web/dxpaint/src/overmind/undo/actions.ts",[],"/Users/jani/Code/Web/dxpaint/src/components/menubar/Menubar.tsx",[],"/Users/jani/Code/Web/dxpaint/src/tools/util/util.tsx",["445"],"import { Point, Color } from '../../types';\nimport { Tool } from '../Tool';\nimport { CustomBrush } from '../../brush/CustomBrush';\nimport { overmind } from '../../index';\nimport { paintingCanvasController } from '../../canvas/paintingCanvas/PaintingCanvasController';\n\nexport function colorToRGBString(color: Color): string {\n  return 'rgb(' + color.r + ',' + color.g + ',' + color.b + ')';\n}\n\nexport function getMousePos(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): Point {\n  const canvas: HTMLCanvasElement = event.currentTarget;\n  const rect = canvas.getBoundingClientRect(); // abs. size of element\n  const scaleX = canvas.width / rect.width; // relationship bitmap vs. element for X\n  const scaleY = canvas.height / rect.height; // relationship bitmap vs. element for Y\n\n  return {\n    x: Math.floor((event.clientX - rect.left) * scaleX), // scale mouse coordinates after they have\n    y: Math.floor((event.clientY - rect.top) * scaleY), // been adjusted to be relative to element\n  };\n}\n\nexport function pointEquals(point1: Point, point2: Point): boolean {\n  return point1.x === point2.x && point1.y === point2.y;\n}\n\nexport function points8Connected(point1: Point, point2: Point): boolean {\n  return Math.abs(point1.x - point2.x) <= 1 && Math.abs(point1.y - point2.y) <= 1;\n}\n\nexport function clearCanvas(canvas: HTMLCanvasElement, color: Color): void {\n  const ctx = canvas.getContext('2d');\n  if (!ctx) {\n    return;\n  }\n  ctx.rect(0, 0, canvas.width, canvas.height);\n  const oldFillStyle = ctx.fillStyle;\n  ctx.fillStyle = colorToRGBString(color);\n  ctx.fill();\n  ctx.fillStyle = oldFillStyle;\n}\n\nexport function clearOverlayCanvas(canvas: HTMLCanvasElement): void {\n  const ctx = canvas.getContext('2d');\n  if (!ctx) {\n    return;\n  }\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n}\n\nexport function getEventHandler(\n  tool: Tool,\n  eventHandlerName:\n    | 'onClick'\n    | 'onContextMenu'\n    | 'onMouseMove'\n    | 'onMouseUp'\n    | 'onMouseDown'\n    | 'onMouseLeave'\n    | 'onMouseEnter'\n    | 'onMouseMoveOverlay'\n    | 'onMouseLeaveOverlay'\n    | 'onMouseEnterOverlay'\n    | 'onMouseUpOverlay'\n    | 'onMouseDownOverlay'\n    | 'onClickOverlay'\n): (event: React.MouseEvent<HTMLCanvasElement, MouseEvent>) => void {\n  if (hasKey(tool, eventHandlerName)) {\n    return (event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): void =>\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      tool[eventHandlerName]!(event);\n  }\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  return (): void => {};\n}\n\nfunction hasKey<O>(obj: O, key: keyof any): key is keyof O {\n  return key in obj;\n}\n\nexport function isRightMouseButton(\n  event: React.MouseEvent<HTMLCanvasElement, MouseEvent>\n): boolean {\n  return event.button === 2 || event.buttons === 2;\n}\n\nexport function isLeftMouseButton(event: React.MouseEvent<HTMLCanvasElement, MouseEvent>): boolean {\n  return event.button === 1 || event.buttons === 1;\n}\n\nexport function isLeftOrRightMouseButton(\n  event: React.MouseEvent<HTMLCanvasElement, MouseEvent>\n): boolean {\n  return isLeftMouseButton(event) || isRightMouseButton(event);\n}\n\n// eslint-disable-next-line max-len\n// adapted from https://stackoverflow.com/questions/11472273/how-to-edit-pixels-and-remove-white-background-in-a-canvas-image-in-html5-and-ja\nexport function extractBrush(\n  sourceCanvas: HTMLCanvasElement,\n  start: Point,\n  width: number,\n  height: number\n): CustomBrush {\n  // Extract color index and add tansparency for background color\n\n  const colorIndex = paintingCanvasController.getIndexForArea(start.x, start.y, width, height);\n  if (!colorIndex) {\n    throw 'Error retrieving color index for new brush';\n  }\n\n  const colorIndexWithTransparency = addTransparency(\n    colorIndex,\n    Number(overmind.state.palette.backgroundColorId)\n  );\n\n  return new CustomBrush(colorIndexWithTransparency, width, height);\n}\n\nexport function addTransparency(texture: Uint8Array, transparentColorIndex: number): Uint8Array {\n  return texture.map((item) => (item === transparentColorIndex ? 0 : item));\n}\n\ninterface Omit {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  <T extends object, K extends [...(keyof T)[]]>(obj: T, ...keys: K): {\n    [K2 in Exclude<keyof T, K[number]>]: T[K2];\n  };\n}\n\nexport const omit: Omit = (obj, ...keys) => {\n  const ret = {} as {\n    [K in keyof typeof obj]: typeof obj[K];\n  };\n  let key: keyof typeof obj;\n  for (key in obj) {\n    if (!keys.includes(key)) {\n      ret[key] = obj[key];\n    }\n  }\n  return ret;\n};\n","/Users/jani/Code/Web/dxpaint/src/overmind/paletteEditor/index.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/app/state.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/undo/UndoBuffer.ts",[],"/Users/jani/Code/Web/dxpaint/src/components/canvas/util.tsx",[],[],"/Users/jani/Code/Web/dxpaint/src/serviceWorker.ts",["446","447"],"// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","/Users/jani/Code/Web/dxpaint/src/tools/FloodFillTool.tsx",[],"/Users/jani/Code/Web/dxpaint/src/canvas/paintingCanvas/program/GeometricIndexer.ts",[],"/Users/jani/Code/Web/dxpaint/src/canvas/paintingCanvas/program/DrawImageRenderer.ts",[],"/Users/jani/Code/Web/dxpaint/src/canvas/paintingCanvas/program/GeometricRenderer.ts",[],"/Users/jani/Code/Web/dxpaint/src/canvas/paintingCanvas/PaintingCanvasController.ts",[],"/Users/jani/Code/Web/dxpaint/src/canvas/paintingCanvas/program/DrawImageIndexer.ts",[],"/Users/jani/Code/Web/dxpaint/src/canvas/overlayCanvas/OverlayCanvasController.ts",[],"/Users/jani/Code/Web/dxpaint/src/canvas/overlayCanvas/program/OverlayGeometricRenderer.ts",[],"/Users/jani/Code/Web/dxpaint/src/canvas/overlayCanvas/OverlayMainCanvasRenderer.ts",[],"/Users/jani/Code/Web/dxpaint/src/canvas/util/util.ts",[],"/Users/jani/Code/Web/dxpaint/src/canvas/ZoomCanvasRenderer.ts",[],"/Users/jani/Code/Web/dxpaint/src/canvas/paintingCanvas/ColorIndexer.ts",["448"],"/Users/jani/Code/Web/dxpaint/src/canvas/paintingCanvas/MainCanvasRenderer.ts",["449"],"import { LineH } from '../../domain/LineH';\nimport { LineV } from '../../domain/LineV';\nimport { Line, Point } from '../../types';\nimport { DrawImageRenderer } from './program/DrawImageRenderer';\nimport { GeometricRenderer } from './program/GeometricRenderer';\n\nexport class MainCanvasRenderer {\n  private gl: WebGLRenderingContext;\n  private geometricRenderer: GeometricRenderer;\n  private drawImageRenderer: DrawImageRenderer;\n\n  constructor(gl: WebGLRenderingContext) {\n    this.gl = gl;\n\n    // create renderers\n\n    this.geometricRenderer = new GeometricRenderer(gl);\n    this.drawImageRenderer = new DrawImageRenderer(gl);\n  }\n\n  renderCanvas(): void {\n    this.drawImageRenderer.renderCanvas();\n  }\n\n  /*   fillRect(x: number, y: number, width: number, heigth: number): void {\n    this.fillRectIndexer.indexFillRect(x, y, width, heigth, colorIndex);\n  }*/\n\n  points(points: Point[]): void {\n    this.geometricRenderer.renderPoints(points);\n  }\n\n  lines(lines: (LineH | LineV)[]): void {\n    this.geometricRenderer.renderLines(lines);\n  }\n\n  /*   drawImage(x: number, y: number, brush: CustomBrush): void {\n    this.drawImageIndexer.indexDrawImage(x, y, brush);\n  } */\n}\n","/Users/jani/Code/Web/dxpaint/src/canvas/overlayCanvas/program/OverlayDrawImageRenderer.ts",[],[],"/Users/jani/Code/Web/dxpaint/src/domain/LineV.ts",[],"/Users/jani/Code/Web/dxpaint/src/domain/LineH.ts",[],"/Users/jani/Code/Web/dxpaint/src/domain/Line.ts",[],"/Users/jani/Code/Web/dxpaint/src/canvas/util/webglUtil.ts",[],"/Users/jani/Code/Web/dxpaint/src/components/toolbox/buttons/ToolboxButtonHoverManager.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/modal/Modal.tsx",[],"/Users/jani/Code/Web/dxpaint/src/algorithm/floodfill.ts",[],"/Users/jani/Code/Web/dxpaint/src/canvas/overlayCanvas/program/OverlaySelectionIndicatorRenderer.ts",[],{"ruleId":"450","severity":1,"message":"451","line":56,"column":20,"nodeType":"452","messageId":"453","endLine":56,"endColumn":74},{"ruleId":"450","severity":1,"message":"451","line":61,"column":23,"nodeType":"452","messageId":"453","endLine":61,"endColumn":77},{"ruleId":"450","severity":1,"message":"451","line":83,"column":29,"nodeType":"452","messageId":"453","endLine":83,"endColumn":83},{"ruleId":"450","severity":1,"message":"451","line":87,"column":30,"nodeType":"452","messageId":"453","endLine":87,"endColumn":84},{"ruleId":"450","severity":1,"message":"451","line":157,"column":30,"nodeType":"452","messageId":"453","endLine":157,"endColumn":84},{"ruleId":"450","severity":1,"message":"451","line":59,"column":20,"nodeType":"452","messageId":"453","endLine":59,"endColumn":74},{"ruleId":"450","severity":1,"message":"451","line":83,"column":29,"nodeType":"452","messageId":"453","endLine":83,"endColumn":83},{"ruleId":"450","severity":1,"message":"451","line":87,"column":30,"nodeType":"452","messageId":"453","endLine":87,"endColumn":84},{"ruleId":"454","severity":1,"message":"455","line":22,"column":26,"nodeType":"456","messageId":"457","endLine":22,"endColumn":39},{"ruleId":"450","severity":1,"message":"451","line":63,"column":30,"nodeType":"452","messageId":"453","endLine":63,"endColumn":84},{"ruleId":"450","severity":1,"message":"451","line":29,"column":30,"nodeType":"452","messageId":"453","endLine":29,"endColumn":84},{"ruleId":"450","severity":1,"message":"451","line":33,"column":25,"nodeType":"452","messageId":"453","endLine":33,"endColumn":79},{"ruleId":"450","severity":1,"message":"451","line":71,"column":30,"nodeType":"452","messageId":"453","endLine":71,"endColumn":84},{"ruleId":"450","severity":1,"message":"451","line":70,"column":29,"nodeType":"452","messageId":"453","endLine":70,"endColumn":83},{"ruleId":"450","severity":1,"message":"451","line":113,"column":30,"nodeType":"452","messageId":"453","endLine":113,"endColumn":84},{"ruleId":"450","severity":1,"message":"458","line":1,"column":17,"nodeType":"452","messageId":"453","endLine":1,"endColumn":25},{"ruleId":"450","severity":1,"message":"459","line":4,"column":10,"nodeType":"452","messageId":"453","endLine":4,"endColumn":21},{"ruleId":"450","severity":1,"message":"460","line":40,"column":37,"nodeType":"452","messageId":"453","endLine":40,"endColumn":42},{"ruleId":"450","severity":1,"message":"451","line":41,"column":23,"nodeType":"452","messageId":"453","endLine":41,"endColumn":77},{"ruleId":"450","severity":1,"message":"451","line":58,"column":30,"nodeType":"452","messageId":"453","endLine":58,"endColumn":84},{"ruleId":"450","severity":1,"message":"451","line":62,"column":27,"nodeType":"452","messageId":"453","endLine":62,"endColumn":81},{"ruleId":"450","severity":1,"message":"461","line":2,"column":43,"nodeType":"452","messageId":"453","endLine":2,"endColumn":47},{"ruleId":"450","severity":1,"message":"451","line":92,"column":30,"nodeType":"452","messageId":"453","endLine":92,"endColumn":84},{"ruleId":"450","severity":1,"message":"451","line":96,"column":27,"nodeType":"452","messageId":"453","endLine":96,"endColumn":81},{"ruleId":"450","severity":1,"message":"451","line":83,"column":30,"nodeType":"452","messageId":"453","endLine":83,"endColumn":84},{"ruleId":"450","severity":1,"message":"451","line":87,"column":27,"nodeType":"452","messageId":"453","endLine":87,"endColumn":81},{"ruleId":"450","severity":1,"message":"451","line":59,"column":25,"nodeType":"452","messageId":"453","endLine":59,"endColumn":79},{"ruleId":"450","severity":1,"message":"462","line":68,"column":13,"nodeType":"452","messageId":"453","endLine":68,"endColumn":21},{"ruleId":"450","severity":1,"message":"451","line":73,"column":30,"nodeType":"452","messageId":"453","endLine":73,"endColumn":84},{"ruleId":"450","severity":1,"message":"451","line":79,"column":30,"nodeType":"452","messageId":"453","endLine":79,"endColumn":84},{"ruleId":"450","severity":1,"message":"461","line":2,"column":43,"nodeType":"452","messageId":"453","endLine":2,"endColumn":47},{"ruleId":"450","severity":1,"message":"451","line":38,"column":20,"nodeType":"452","messageId":"453","endLine":38,"endColumn":74},{"ruleId":"450","severity":1,"message":"451","line":43,"column":23,"nodeType":"452","messageId":"453","endLine":43,"endColumn":77},{"ruleId":"450","severity":1,"message":"451","line":65,"column":29,"nodeType":"452","messageId":"453","endLine":65,"endColumn":83},{"ruleId":"450","severity":1,"message":"451","line":69,"column":30,"nodeType":"452","messageId":"453","endLine":69,"endColumn":84},{"ruleId":"463","severity":1,"message":"464","line":77,"column":39,"nodeType":"465","messageId":"466","endLine":77,"endColumn":42,"suggestions":"467"},{"ruleId":"468","severity":1,"message":"469","line":26,"column":8,"nodeType":"470","messageId":"471","endLine":26,"endColumn":42},{"ruleId":"468","severity":1,"message":"469","line":133,"column":8,"nodeType":"470","messageId":"471","endLine":133,"endColumn":29},{"ruleId":"450","severity":1,"message":"472","line":3,"column":10,"nodeType":"452","messageId":"453","endLine":3,"endColumn":14},{"ruleId":"450","severity":1,"message":"472","line":3,"column":10,"nodeType":"452","messageId":"453","endLine":3,"endColumn":14},"@typescript-eslint/no-unused-vars","'event' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull","'useState' is defined but never used.","'CustomBrush' is defined but never used.","'state' is defined but never used.","'omit' is defined but never used.","'mousePos' is assigned a value but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["473","474"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","'Line' is defined but never used.",{"messageId":"475","fix":"476","desc":"477"},{"messageId":"478","fix":"479","desc":"480"},"suggestUnknown",{"range":"481","text":"482"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"481","text":"483"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[2612,2615],"unknown","never"]